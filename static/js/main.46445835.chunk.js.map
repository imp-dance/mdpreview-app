{"version":3,"sources":["components/core/App/styles.ts","components/common/CodeEditor/CodeEditor.tsx","components/common/Preview/Preview.tsx","components/core/App/App.tsx","index.tsx"],"names":["StyledApp","styled","div","GlobalStyle","createGlobalStyle","CodeEditor","onChange","value","StyledCodeEditor","highlight","code","Prism","languages","markdown","onValueChange","Editor","Preview","PreviewContainer","allowDangerousHtml","ReactMarkdown","App","useState","setMarkdown","split","minSize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAEaA,EAAYC,IAAOC,IAAV,guCA8DTC,EAAcC,YAAH,mZ,uDCpDXC,EAAa,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,MACrC,OACE,mCACE,cAACC,EAAD,CACEC,UAAW,SAACC,GAAD,OACTC,IAAMF,UAAUC,EAAMC,IAAMC,UAAUC,SAAU,aAElDC,cAAe,SAACJ,GAAD,OAAUJ,EAASI,IAClCH,MAAOA,OAMTC,EAAmBP,YAAOc,IAAPd,CAAH,wb,iBClBTe,EAAU,SAAC,GAAyB,IAAvBH,EAAsB,EAAtBA,SACxB,OACE,cAACI,EAAD,CAAkBC,oBAAoB,EAAtC,SAA6CL,KAI3CI,EAAmBhB,YAAOkB,IAAPlB,CAAH,8KCOPmB,MAff,WAAgB,IAAD,EACmBC,mBAAS,sBAD5B,mBACNR,EADM,KACIS,EADJ,KAEb,OACE,qCACE,cAACnB,EAAD,IACA,cAACH,EAAD,UACE,eAAC,YAAD,CAAWuB,MAAM,WAAWC,QAAS,GAArC,UACE,cAAC,EAAD,CAAYlB,SAAU,SAACI,GAAD,OAAUY,EAAYZ,IAAOH,MAAOM,IAC1D,cAAC,EAAD,CAASA,SAAUA,aCV7BY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.46445835.chunk.js","sourcesContent":["import styled, { createGlobalStyle } from \"styled-components\";\n\nexport const StyledApp = styled.div`\n  background: #001514;\n  --padding: 2rem;\n\n  .Resizer {\n    background: #000;\n    opacity: 0.2;\n    z-index: 1;\n    box-sizing: border-box;\n    background-clip: padding-box;\n  }\n\n  .Resizer:hover {\n    transition: all 2s ease;\n  }\n\n  .Resizer.horizontal {\n    height: 11px;\n    margin: -5px 0;\n    border-top: 5px solid rgba(255, 255, 255, 0);\n    border-bottom: 5px solid rgba(255, 255, 255, 0);\n    cursor: row-resize;\n  }\n\n  .Resizer.horizontal:hover,\n  .Resizer.horizontal.resizing {\n    border-top: 5px solid rgba(0, 0, 0, 0.5);\n    border-bottom: 5px solid rgba(0, 0, 0, 0.5);\n  }\n\n  .Resizer.vertical {\n    width: 11px;\n    margin: 0 -5px;\n    border-left: 5px solid rgba(255, 255, 255, 0);\n    border-right: 5px solid rgba(255, 255, 255, 0);\n    cursor: col-resize;\n  }\n\n  .Resizer.vertical:hover,\n  .Resizer.vertical.resizing {\n    border-left: 5px solid rgba(0, 0, 0, 0.5);\n    border-right: 5px solid rgba(0, 0, 0, 0.5);\n  }\n\n  .DragLayer {\n    z-index: 1;\n    pointer-events: none;\n  }\n\n  .DragLayer.resizing {\n    pointer-events: auto;\n  }\n\n  .DragLayer.horizontal {\n    cursor: row-resize;\n  }\n\n  .DragLayer.vertical {\n    cursor: col-resize;\n  }\n`;\n\nexport const GlobalStyle = createGlobalStyle`\n    @import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:ital,wght@0,400;0,700;1,400&display=swap');\n    body, html {\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n        font-family:16px;\n        padding:0;\n        margin:0;\n    }\n`;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Editor from \"react-simple-code-editor\";\nimport Prism from \"prismjs\";\nimport \"prismjs/components/prism-markdown\";\nimport \"prismjs/themes/prism-okaidia.css\";\n\ntype Props = {\n  onChange: (e: string) => void;\n  value: string;\n};\n\nexport const CodeEditor = ({ onChange, value }: Props) => {\n  return (\n    <>\n      <StyledCodeEditor\n        highlight={(code) =>\n          Prism.highlight(code, Prism.languages.markdown, \"markdown\")\n        }\n        onValueChange={(code) => onChange(code)}\n        value={value}\n      />\n    </>\n  );\n};\n\nconst StyledCodeEditor = styled(Editor)`\n  color: #f9f9f9;\n  min-height: 100vh;\n  background: #001514;\n  width: 100%;\n  padding: var(--padding) !important;\n  font-family: \"IBM Plex Mono\", monospace;\n  .token.regex,\n  .token.important {\n    color: #ffbd00 !important;\n  }\n  .token.url {\n    color: #a6b1e1;\n  }\n  textarea {\n    font-family: \"IBM Plex Mono\", monospace;\n    min-height: 100vh;\n    padding: var(--padding) !important;\n  }\n`;\n\nexport default CodeEditor;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ReactMarkdown from \"react-markdown\";\n\ntype Props = {\n  markdown: string;\n};\n\nexport const Preview = ({ markdown }: Props) => {\n  return (\n    <PreviewContainer allowDangerousHtml={true}>{markdown}</PreviewContainer>\n  );\n};\n\nconst PreviewContainer = styled(ReactMarkdown)`\n  background: #f1f0f8;\n  width: 100%;\n  padding: var(--padding);\n  overflow-y: auto;\n  > *:first-child {\n    margin-top: 0 !important;\n  }\n`;\n\nexport default Preview;\n","import React, { useState } from \"react\";\nimport { SplitPane } from \"react-multi-split-pane\";\nimport { GlobalStyle, StyledApp } from \"./styles\";\nimport { CodeEditor } from \"../../common/CodeEditor/CodeEditor\";\nimport { Preview } from \"../../common/Preview/Preview\";\n\nfunction App() {\n  const [markdown, setMarkdown] = useState(\"mdpreview.app\\n---\");\n  return (\n    <>\n      <GlobalStyle />\n      <StyledApp>\n        <SplitPane split=\"vertical\" minSize={50}>\n          <CodeEditor onChange={(code) => setMarkdown(code)} value={markdown} />\n          <Preview markdown={markdown} />\n        </SplitPane>\n      </StyledApp>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/core/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}